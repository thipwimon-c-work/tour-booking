{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/dev2019/StartUp/tour-booking/src/components/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport auth from \"./firebase\";\nimport { Button, Box, TextField, InputAdornment, IconButton, ThemeProvider, createMuiTheme, Container, Grid } from \"@material-ui/core\";\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { blueGrey } from \"@material-ui/core/colors\";\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\nimport firebase from \"firebase/app\";\nconst useStyles = makeStyles(theme => ({\n  margin: {\n    margin: theme.spacing(1)\n  },\n  content: {\n    flex: 1,\n    height: \"100vh\"\n    /* Magic here */\n    ,\n    display: \"flex\",\n    justify: \"center\",\n    alignContent: \"center\"\n  }\n}));\nconst theme = createMuiTheme({\n  palette: {\n    primary: blueGrey\n  }\n});\n\nconst Login = ({\n  setSession\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\"); // console.log(auth);\n\n  const [values, setValues] = useState(false); //   {\n  //   showPassword: false,\n  // });\n\n  const handleLogin = async () => {\n    try {\n      const response = await auth.signInWithEmailAndPassword(username, password); // console.log(response)\n\n      const {\n        user\n      } = response;\n      console.log({\n        user\n      });\n      setSession({\n        isLoggedIn: true,\n        currentUser: user\n      });\n    } catch (err) {\n      console.log({\n        err\n      });\n      setSession({\n        isLoggedIn: false,\n        currentUser: null,\n        errorMessage: err.message\n      });\n    }\n  };\n\n  const handleUsername = event => {\n    setUsername(event.target.value);\n  };\n\n  const handlePassword = event => {\n    setPassword(event.target.value);\n  };\n\n  const handleRegister = () => {\n    try {\n      const response = auth.createUserWithEmailAndPassword(username, password);\n      const {\n        user\n      } = response;\n      setSession({\n        isLoggedIn: true,\n        currentUser: user\n      });\n    } catch (err) {\n      setSession({\n        isLoggedIn: false,\n        currentUser: null,\n        errorMessage: err.message\n      });\n    }\n  };\n\n  const handleClickShowPassword = () => {\n    setValues({\n      showPassword: !values.showPassword\n    });\n  };\n\n  const handleMouseDownPassword = event => {\n    event.preventDefault();\n  };\n\n  const uiConfig = {\n    // Popup signin flow rather than redirect flow.\n    signInFlow: \"popup\",\n    // We will display Google , Facebook , Etc as auth providers.\n    signInOptions: [firebase.auth.GoogleAuthProvider.PROVIDER_ID, firebase.auth.FacebookAuthProvider.PROVIDER_ID, firebase.auth.EmailAuthProvider.PROVIDER_ID],\n    callbacks: {\n      // Avoid redirects after sign-in.\n      signInSuccess: () => false\n    }\n  };\n  return (\n    /*#__PURE__*/\n    // <div>\n    //   <input type=\"email\" onChange={handleUsername}></input>\n    //   <input type=\"password\" onChange={handlePassword}></input>\n    //   <button onClick={handleLogin}>Login</button>\n    //   <button onClick={handleRegister}>Register</button>\n    // </div>\n    // <Container maxWidth=\"xs\">\n    //   <Grid container className={classes.content} spacing={2}>\n    //     <Grid item xs={12}>\n    //       <TextField\n    //         className={classes.margin}\n    //         id=\"input-with-icon-textfield\"\n    //         label=\"Email\"\n    //         fullWidth\n    //         onChange={handleUsername}\n    //       />\n    //     </Grid>\n    //     <Grid item xs={12}>\n    //       <TextField\n    //         className={classes.margin}\n    //         id=\"input-with-icon-textfield\"\n    //         label=\"Password\"\n    //         type={values.showPassword ? \"text\" : \"password\"}\n    //         value={values.password}\n    //         onChange={handlePassword}\n    //         fullWidth\n    //         InputProps={{\n    //           endAdornment: (\n    //             <InputAdornment position=\"end\">\n    //               <IconButton\n    //                 aria-label=\"toggle password visibility\"\n    //                 onClick={handleClickShowPassword}\n    //                 onMouseDown={handleMouseDownPassword}\n    //                 edge=\"end\"\n    //               >\n    //                 {values.showPassword ? <Visibility /> : <VisibilityOff />}\n    //               </IconButton>\n    //             </InputAdornment>\n    //           ),\n    //         }}\n    //       />\n    //     </Grid>\n    //     <Grid item xs={12}>\n    //       <Button color=\"secondary\" fullWidth variant=\"contained\">\n    //         Log in\n    //       </Button>\n    //     </Grid>\n    //     <Grid item xs={12}>\n    //       <p>\n    //         Don't have an account ? <a href=\"#\">Sign up</a>\n    //       </p>\n    //     </Grid>\n    //     <Grid item xs={12}>\n    //       <StyledFirebaseAuth\n    //         uiConfig={uiConfig}\n    //         firebaseAuth={firebase.auth()}\n    //       />\n    //     </Grid>\n    //   </Grid>\n    // </Container>\n    _jsxDEV(Card, {\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.title,\n          color: \"textSecondary\",\n          gutterBottom: true,\n          children: \"Word of the Day\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          component: \"h2\",\n          children: [\"be\", bull, \"nev\", bull, \"o\", bull, \"lent\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.pos,\n          color: \"textSecondary\",\n          children: \"adjective\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          component: \"p\",\n          children: [\"well meaning and kindly.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 9\n          }, this), '\"a benevolent smile\"']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          size: \"small\",\n          children: \"Learn More\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 5\n    }, this)\n  );\n};\n\n_s(Login, \"P+6lRpBKnxn2ioMDZbOembG2Q0Q=\", false, function () {\n  return [useStyles];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/dev2019/StartUp/tour-booking/src/components/Login.js"],"names":["React","useState","auth","Button","Box","TextField","InputAdornment","IconButton","ThemeProvider","createMuiTheme","Container","Grid","Visibility","VisibilityOff","makeStyles","blueGrey","StyledFirebaseAuth","firebase","useStyles","theme","margin","spacing","content","flex","height","display","justify","alignContent","palette","primary","Login","setSession","classes","username","setUsername","password","setPassword","values","setValues","handleLogin","response","signInWithEmailAndPassword","user","console","log","isLoggedIn","currentUser","err","errorMessage","message","handleUsername","event","target","value","handlePassword","handleRegister","createUserWithEmailAndPassword","handleClickShowPassword","showPassword","handleMouseDownPassword","preventDefault","uiConfig","signInFlow","signInOptions","GoogleAuthProvider","PROVIDER_ID","FacebookAuthProvider","EmailAuthProvider","callbacks","signInSuccess","root","title","bull","pos"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport auth from \"./firebase\";\nimport {\n  Button,\n  Box,\n  TextField,\n  InputAdornment,\n  IconButton,\n  ThemeProvider,\n  createMuiTheme,\n  Container,\n  Grid,\n} from \"@material-ui/core\";\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { blueGrey } from \"@material-ui/core/colors\";\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\nimport firebase from \"firebase/app\";\n\nconst useStyles = makeStyles((theme) => ({\n  margin: {\n    margin: theme.spacing(1),\n  },\n  content: {\n    flex: 1,\n    height: \"100vh\" /* Magic here */,\n    display: \"flex\",\n    justify: \"center\",\n    alignContent: \"center\",\n  },\n}));\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: blueGrey,\n  },\n});\n\nconst Login = ({ setSession }) => {\n    const classes = useStyles();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  // console.log(auth);\n\n  const [values, setValues] = useState(false);\n  //   {\n  //   showPassword: false,\n  // });\n\n  const handleLogin = async () => {\n    try {\n      const response = await auth.signInWithEmailAndPassword(\n        username,\n        password\n      );\n      // console.log(response)\n      const { user } = response;\n      console.log({ user });\n\n      setSession({\n        isLoggedIn: true,\n        currentUser: user,\n      });\n    } catch (err) {\n      console.log({ err });\n\n      setSession({\n        isLoggedIn: false,\n        currentUser: null,\n        errorMessage: err.message,\n      });\n    }\n  };\n\n  const handleUsername = (event) => {\n    setUsername(event.target.value);\n  };\n\n  const handlePassword = (event) => {\n    setPassword(event.target.value);\n  };\n\n  const handleRegister = () => {\n    try {\n      const response = auth.createUserWithEmailAndPassword(username, password);\n\n      const { user } = response;\n\n      setSession({\n        isLoggedIn: true,\n        currentUser: user,\n      });\n    } catch (err) {\n      setSession({\n        isLoggedIn: false,\n        currentUser: null,\n        errorMessage: err.message,\n      });\n    }\n  };\n\n  const handleClickShowPassword = () => {\n    setValues({ showPassword: !values.showPassword });\n  };\n\n  const handleMouseDownPassword = (event: MouseEvent<HTMLButtonElement>) => {\n    event.preventDefault();\n  };\n\n  const uiConfig = {\n    // Popup signin flow rather than redirect flow.\n    signInFlow: \"popup\",\n    // We will display Google , Facebook , Etc as auth providers.\n    signInOptions: [\n      firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n      firebase.auth.FacebookAuthProvider.PROVIDER_ID,\n      firebase.auth.EmailAuthProvider.PROVIDER_ID,\n    ],\n    callbacks: {\n      // Avoid redirects after sign-in.\n      signInSuccess: () => false,\n    },\n  };\n\n  return (\n    // <div>\n    //   <input type=\"email\" onChange={handleUsername}></input>\n    //   <input type=\"password\" onChange={handlePassword}></input>\n    //   <button onClick={handleLogin}>Login</button>\n    //   <button onClick={handleRegister}>Register</button>\n    // </div>\n    // <Container maxWidth=\"xs\">\n    //   <Grid container className={classes.content} spacing={2}>\n    //     <Grid item xs={12}>\n    //       <TextField\n    //         className={classes.margin}\n    //         id=\"input-with-icon-textfield\"\n    //         label=\"Email\"\n    //         fullWidth\n    //         onChange={handleUsername}\n    //       />\n    //     </Grid>\n    //     <Grid item xs={12}>\n    //       <TextField\n    //         className={classes.margin}\n    //         id=\"input-with-icon-textfield\"\n    //         label=\"Password\"\n    //         type={values.showPassword ? \"text\" : \"password\"}\n    //         value={values.password}\n    //         onChange={handlePassword}\n    //         fullWidth\n    //         InputProps={{\n    //           endAdornment: (\n    //             <InputAdornment position=\"end\">\n    //               <IconButton\n    //                 aria-label=\"toggle password visibility\"\n    //                 onClick={handleClickShowPassword}\n    //                 onMouseDown={handleMouseDownPassword}\n    //                 edge=\"end\"\n    //               >\n    //                 {values.showPassword ? <Visibility /> : <VisibilityOff />}\n    //               </IconButton>\n    //             </InputAdornment>\n    //           ),\n    //         }}\n    //       />\n    //     </Grid>\n    //     <Grid item xs={12}>\n    //       <Button color=\"secondary\" fullWidth variant=\"contained\">\n    //         Log in\n    //       </Button>\n    //     </Grid>\n    //     <Grid item xs={12}>\n    //       <p>\n    //         Don't have an account ? <a href=\"#\">Sign up</a>\n    //       </p>\n    //     </Grid>\n       \n    //     <Grid item xs={12}>\n    //       <StyledFirebaseAuth\n    //         uiConfig={uiConfig}\n    //         firebaseAuth={firebase.auth()}\n    //       />\n    //     </Grid>\n    //   </Grid>\n    // </Container>\n    <Card className={classes.root}>\n    <CardContent>\n      <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n        Word of the Day\n      </Typography>\n      <Typography variant=\"h5\" component=\"h2\">\n        be{bull}nev{bull}o{bull}lent\n      </Typography>\n      <Typography className={classes.pos} color=\"textSecondary\">\n        adjective\n      </Typography>\n      <Typography variant=\"body2\" component=\"p\">\n        well meaning and kindly.\n        <br />\n        {'\"a benevolent smile\"'}\n      </Typography>\n    </CardContent>\n    <CardActions>\n      <Button size=\"small\">Learn More</Button>\n    </CardActions>\n  </Card>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}